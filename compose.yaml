x-logging:
  &default-logging
  driver: "json-file"
  options:
    max-size: '5m'
    max-file: '5'

services:

  api-gateway:
    image: ghcr.io/barpav/msg-api-gateway
    container_name: msg-api-gateway
    ports:
      - 80:80
    labels:
      co.elastic.logs/enabled: true
      co.elastic.logs/json.keys_under_root: true
      co.elastic.logs/json.overwrite_keys: true
      co.elastic.logs/json.add_error_key: true
      co.elastic.logs/json.expand_keys: true
    logging: *default-logging
    depends_on:
      - users-v1
      - sessions-v1
      - files-v1

  users-v1:
    image: ghcr.io/barpav/msg-users:v1
    container_name: msg-users-v1
    environment:
      - MSG_STORAGE_HOST=storage-users-v1
      - MSG_SESSIONS_HOST=sessions-v1
      - MSG_FILES_STAT_HOST=broker
    expose:
      - 8080
      - 9000
    labels:
      co.elastic.logs/enabled: true
      co.elastic.logs/json.keys_under_root: true
      co.elastic.logs/json.overwrite_keys: true
      co.elastic.logs/json.add_error_key: true
      co.elastic.logs/json.expand_keys: true
    logging: *default-logging
    depends_on:
      storage-users-v1:
        condition: service_healthy
      broker:
        condition: service_healthy
  
  storage-users-v1:
    image: ghcr.io/barpav/msg-storage-users:v1
    container_name: msg-storage-users-v1
    environment:
      - POSTGRES_PASSWORD=postgres
    expose:
      - 5432
    logging: *default-logging
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1s
      timeout: 2s
      retries: 5
  
  sessions-v1:
    image: ghcr.io/barpav/msg-sessions:v1
    container_name: msg-sessions-v1
    environment:
      - MSG_STORAGE_HOST=storage-sessions-v1
      - MSG_USERS_HOST=users-v1
    expose:
      - 8080
      - 9000
    labels:
      co.elastic.logs/enabled: true
      co.elastic.logs/json.keys_under_root: true
      co.elastic.logs/json.overwrite_keys: true
      co.elastic.logs/json.add_error_key: true
      co.elastic.logs/json.expand_keys: true
    logging: *default-logging
    depends_on:
      storage-sessions-v1:
        condition: service_healthy
      users-v1:
        condition: service_started
  
  storage-sessions-v1:
    image: redis:alpine3.18
    container_name: msg-storage-sessions-v1
    expose:
      - 6379
    logging: *default-logging
    healthcheck:
      test: ["CMD-SHELL", "redis-cli", "ping"]
      interval: 1s
      timeout: 2s
      retries: 5
  
  files-v1:
    image: ghcr.io/barpav/msg-files:v1
    container_name: msg-files-v1
    environment:
      - MSG_STORAGE_HOST=storage-files-v1
      - MSG_SESSIONS_HOST=sessions-v1
      - MSG_FILES_STAT_HOST=broker
    logging: *default-logging
    expose:
      - 8080
    labels:
      co.elastic.logs/enabled: true
      co.elastic.logs/json.keys_under_root: true
      co.elastic.logs/json.overwrite_keys: true
      co.elastic.logs/json.add_error_key: true
      co.elastic.logs/json.expand_keys: true
    depends_on:
      storage-files-v1:
        condition: service_healthy
      sessions-v1:
        condition: service_started
      broker:
        condition: service_healthy
  
  storage-files-v1:
    image: mongo:5.0.19
    container_name: msg-storage-files-v1
    expose:
      - 27017
    logging: *default-logging
    healthcheck:
      test:
        [
          "CMD",
          "mongo",
          "--quiet",
          "localhost/test",
          "--eval",
          "'quit(db.runCommand({ ping: 1 }).ok ? 0 : 2)'",
        ]
      interval: 5s
      timeout: 5s
      retries: 5

  broker:
    image: rabbitmq:3.9.29-alpine
    container_name: msg-broker
    expose:
      - 5672
    logging: *default-logging
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  logs-collector:
    image: ghcr.io/barpav/msg-logs-collector
    container_name: msg-logs-collector
    user: root
    environment:
      - ELASTICSEARCH_HOSTS=http://logs-storage:9200
    logging: *default-logging
    mem_limit: 512M
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
  
  logs-storage:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.1
    container_name: msg-logs-storage
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    expose:
      - 9200
    logging: *default-logging
    healthcheck:
      test: ["CMD", "curl", "-s", "-f", "http://logs-storage:9200/_cat/health"]
      interval: 5s
      timeout: 3s
      retries: 20
    mem_limit: 1G

  logs-ui:
    image: ghcr.io/barpav/msg-logs-ui
    container_name: msg-logs-ui
    environment:
      - ELASTICSEARCH_HOSTS=http://logs-storage:9200
    ports:
      - 5601:5601
    logging: *default-logging
    depends_on:
      logs-storage:
        condition: service_healthy
    healthcheck:
      # Kibana doesn't provide other way to config dataviews
      test: ["CMD", "curl", "-H", "kbn-xsrf: anything", "-F", "file=@/usr/share/kibana/config/settings.ndjson", "http://localhost:5601/api/saved_objects/_import"]
      interval: 3s
      timeout: 3s
      retries: 10
    mem_limit: 1G